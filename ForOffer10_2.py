"""一只青蛙一次可以跳上1级台阶，也可以跳上2级台阶。求该青蛙跳上一个 n 级的台阶总共有多少种跳法。
答案需要取模 1e9+7（1000000007）"""


class ForOffer1002:

    def num_ways(self, n) -> int:
        a, b = 1, 1
        for _ in range(n):
            a, b = b, a+b
        return a % 1000000007


if __name__ == '__main__':
    test = ForOffer1002()
    print(test.num_ways(7))

"""
    这题就主要是理解：
    跳上n个台阶有f（n）种跳法，它的最后一步只有1或者2
    最后一步为1：则跳上n-1个台阶有f（n-1）种跳法
    最后一步为2：则跳上n-2个台阶有f（n-2）种跳法
    这两种加起来就刚好是f（n）
    即f（n） = f（n-1） + f（n-2），只不过初始条件与斐波那契不同罢了
"""